package com.commander4j.cmd;

import java.util.HashMap;

public class ZPLCmdDescription
{

  public HashMap<String, ZPLCmdInfo> zplDescription = new HashMap<String, ZPLCmdInfo>();

  public ZPLCmdDescription()
  {
	    zplDescription.put("^A",  new ZPLCmdInfo("Use Scalable/Bitmapped Font","(^Afo,h,w,d:f.x )",false));
	    zplDescription.put("^A0", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^A@", new ZPLCmdInfo("Use Font Name to Call Font","(^A@o,h,w,d:f.x )",false));
	    zplDescription.put("^AA", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^AB", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^AC", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^AD", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^AE", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^AF", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^AG", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^AH", new ZPLCmdInfo("Select Font","",false));
	    zplDescription.put("^B0", new ZPLCmdInfo("Aztec Bar Code Parameters","(^B0a,b,c,d,e,f,g )",true));
	    zplDescription.put("^B1", new ZPLCmdInfo("Code 11 Bar Code","(^B1o,e,h,f,g )",true));
	    zplDescription.put("^B2", new ZPLCmdInfo("Interleaved 2 of 5 Bar Code","(^B2o,h,f,g,e,j )",true));
	    zplDescription.put("^B3", new ZPLCmdInfo("Code 39 Bar Code","(^B3o,e,h,f,g )",true));
	    zplDescription.put("^B4", new ZPLCmdInfo("Code 49 Bar Code","(^B4o,h,f,m )",true));
	    zplDescription.put("^B5", new ZPLCmdInfo("Planet Code bar code","(^B5o,h,f,g )",true));
	    zplDescription.put("^B7", new ZPLCmdInfo("PDF417 Bar Code","(^B7o,h,s,c,r,t )",true));
	    zplDescription.put("^B8", new ZPLCmdInfo("EAN-8 Bar Code","(^B8o,h,f,g )",true));
	    zplDescription.put("^B9", new ZPLCmdInfo("UPC-E Bar Code","(^B9o,h,f,g,e )",true));
	    zplDescription.put("^BA", new ZPLCmdInfo("Code 93 Bar Code","(^BAo,h,f,g,e )",true));
	    zplDescription.put("^BB", new ZPLCmdInfo("CODABLOCK Bar Code","(^BBo,h,s,c,r,m )",true));
	    zplDescription.put("^BC", new ZPLCmdInfo("Code 128 Bar Code (Subsets A,B,& C)","(^BCo,h,f,g,e,m )",true));
	    zplDescription.put("^BD", new ZPLCmdInfo("UPS MaxiCode Bar Code","(^BDm,n,t )",true));
	    zplDescription.put("^BE", new ZPLCmdInfo("EAN-13 Bar Code","(^BEo,h,f,g )",true));
	    zplDescription.put("^BF", new ZPLCmdInfo("MicroPDF417 Bar Code","(^BFo,h,m )",true));
	    zplDescription.put("^BI", new ZPLCmdInfo("Industrial 2 of 5 Bar Codes","(^BIo,h,f,g )",true));
	    zplDescription.put("^BJ", new ZPLCmdInfo("Standard 2 of 5 Bar Code","(^BJo,h,f,g )",true));
	    zplDescription.put("^BK", new ZPLCmdInfo("ANSI Codabar Bar Code","(^BKo,e,h,f,g,k,l )",true));
	    zplDescription.put("^BL", new ZPLCmdInfo("LOGMARS Bar Code","(^BLo,h,g )",true));
	    zplDescription.put("^BM", new ZPLCmdInfo("MSI Bar Code","(^BMo,e,h,f,g,e2 )",true));
	    zplDescription.put("^BO", new ZPLCmdInfo("Aztec Bar Code Parameters","(^BOa,b,c,d,e,f,g )",true));
	    zplDescription.put("^BP", new ZPLCmdInfo("Plessey Bar Code","(^BPo,e,h,f,g )",true));
	    zplDescription.put("^BQ", new ZPLCmdInfo("QR Code Bar Code","(^BQa,b,c,d,e )",true));
	    zplDescription.put("^BR", new ZPLCmdInfo("GS1 Databar","(^BRa,b,c,d,e,f )",true));
	    zplDescription.put("^BS", new ZPLCmdInfo("UPC/EAN Extensions","(^BSo,h,f,g )",true));
	    zplDescription.put("^BT", new ZPLCmdInfo("TLC39 Bar Code","(^BTo,w1,r1,h1,w2,h2 )",true));
	    zplDescription.put("^BU", new ZPLCmdInfo("UPC-A Bar Code","(^BUo,h,f,g,e )",true));
	    zplDescription.put("^BX", new ZPLCmdInfo("Data Matrix Bar Code","(^BXo,h,s,c,r,f,g,a )",true));
	    zplDescription.put("^BY", new ZPLCmdInfo("Bar Code Field Default","(^BYw,r,h )",true));
	    zplDescription.put("^BZ", new ZPLCmdInfo("POSTAL Bar Code","(^BZo,h,f,g,t )",true));
	    zplDescription.put("^CC", new ZPLCmdInfo("Change Caret (Alt. ~CC)","(^CCx or ~CCx )",false));
	    zplDescription.put("^CD", new ZPLCmdInfo("Change Delimiter (Alt. ~CD)","(^CDa or ~CDa )",false));
	    zplDescription.put("^CF", new ZPLCmdInfo("Change Alphanumeric Default Font","(^CFf,h,w )",false));
	    zplDescription.put("^CI", new ZPLCmdInfo("Change International Font/Encoding","(^CIa,s1,d1,s2,d2,... )",false));
	    zplDescription.put("^CM", new ZPLCmdInfo("Change Memory Letter Designation","(^CMa,b,c,d )",false));
	    zplDescription.put("^CN", new ZPLCmdInfo("Cut Now","(^CNa )",false));
	    zplDescription.put("^CO", new ZPLCmdInfo("Cache On","(^COa,b,c )",false));
	    zplDescription.put("^CP", new ZPLCmdInfo("Remove Label","(^CPa )",false));
	    zplDescription.put("^CT", new ZPLCmdInfo("Change Tilde (Alt. ~CT)","(^CTa or ~CTa )",false));
	    zplDescription.put("^CV", new ZPLCmdInfo("Code Validation","(^CVa )",false));
	    zplDescription.put("^CW", new ZPLCmdInfo("Font Identifier","(^CWa,d:o.x )",false));
	    zplDescription.put("^DF", new ZPLCmdInfo("Download Format","(^DFd:o.x )",false));
	    zplDescription.put("^FB", new ZPLCmdInfo("Field Block","(^FBa,b,c,d,e )",false));
	    zplDescription.put("^FC", new ZPLCmdInfo("Field Clock","(^FCa,b,c )",false));
	    zplDescription.put("^FD", new ZPLCmdInfo("Field Data","(^FDa )",true));
	    zplDescription.put("^FH", new ZPLCmdInfo("Field Hexadecimal Indicator","(^FHa )",true));
	    zplDescription.put("^FL", new ZPLCmdInfo("Font Linking","(^FL<ext>,<base>,<link> )",false));
	    zplDescription.put("^FM", new ZPLCmdInfo("Multiple Field Origin Locations","(^FMx1,y1,x2,y2,... )",false));
	    zplDescription.put("^FN", new ZPLCmdInfo("Field Number","(^FN#'a' )",false));
	    zplDescription.put("^FO", new ZPLCmdInfo("Field Origin","(^FOx,y,z )",false));
	    zplDescription.put("^FP", new ZPLCmdInfo("Field Parameter","(^FPd,g )",false));
	    zplDescription.put("^FR", new ZPLCmdInfo("Field Reverse Print","(^FR )",false));
	    zplDescription.put("^FS", new ZPLCmdInfo("Field Separator","(^FS )",true));
	    zplDescription.put("^FT", new ZPLCmdInfo("Field Typeset","(^FTx,y,z )",false));
	    zplDescription.put("^FV", new ZPLCmdInfo("Field Variable","(^FVa )",false));
	    zplDescription.put("^FW", new ZPLCmdInfo("Field Orientation","(^FWr,z )",false));
	    zplDescription.put("^FX", new ZPLCmdInfo("Comment","(^FXc )",false));
	    zplDescription.put("^GB", new ZPLCmdInfo("Graphic Box","(^GBw,h,t,c,r )",true));
	    zplDescription.put("^GC", new ZPLCmdInfo("Graphic Circle","(^GCd,t,c )",true));
	    zplDescription.put("^GD", new ZPLCmdInfo("Graphic Diagonal Line","(^GDw,h,t,c,o )",true));
	    zplDescription.put("^GE", new ZPLCmdInfo("Graphic Elipse","(^GEw,h,t,c )",true));
	    zplDescription.put("^GF", new ZPLCmdInfo("Graphic Field","(^GFa,b,c,d,data )",true));
	    zplDescription.put("^GS", new ZPLCmdInfo("Graphic Symbol","(^GSo,h,w )",true));
	    zplDescription.put("^HF", new ZPLCmdInfo("Return Host Format","(^HFd,o,x )",false));
	    zplDescription.put("^HG", new ZPLCmdInfo("Return Host Graphic","(^HGd:o.x )",false));
	    zplDescription.put("^HH", new ZPLCmdInfo("Return Configuration Label","(^HH )",false));
	    zplDescription.put("^HL", new ZPLCmdInfo("Return RFID Data Log to Host (Alt. ~HL)","(^HL or ~HL )",false));
	    zplDescription.put("^HR", new ZPLCmdInfo("Calibrate RFID Tag Position","(^HRa,b,c,d,e )",false));
	    zplDescription.put("^HV", new ZPLCmdInfo("Return Host Verification","(^HV#,n,h,t,a )",false));
	    zplDescription.put("^HW", new ZPLCmdInfo("Return Host Directory List","(^HWd:o.x )",false));
	    zplDescription.put("^HY", new ZPLCmdInfo("Upload Graphics","(^HYd:o.x )",false));
	    zplDescription.put("^HZ", new ZPLCmdInfo("Display Description Information","(^HZO,d:o.x,l )",false));
	    zplDescription.put("^HZ", new ZPLCmdInfo("Display Description Information","(^HZb )",false));
	    zplDescription.put("^ID", new ZPLCmdInfo("Object Delete","(^IDd:o.x )",false));
	    zplDescription.put("^IL", new ZPLCmdInfo("Image Load","(^ILd:o.x )",false));
	    zplDescription.put("^IM", new ZPLCmdInfo("Image Move","(^IMd:o.x )",false));
	    zplDescription.put("^IS", new ZPLCmdInfo("Image Save","(^ISd:o.x,p )",false));
	    zplDescription.put("^JB", new ZPLCmdInfo("Initialize Flash Memory","(^JBa )",false));
	    zplDescription.put("^JH", new ZPLCmdInfo("Early Warning Settings","(^JHa,b,c,d,e,f,g,h,i,j )",false));
	    zplDescription.put("^JI", new ZPLCmdInfo("Start Zebra BASIC Interpreter","(^JId:o.x,b,c,d )",false));
	    zplDescription.put("^JJ", new ZPLCmdInfo("Set Auxiliary Port","(^JJa,b,c,d,e,f )",false));
	    zplDescription.put("^JM", new ZPLCmdInfo("Set Dots per Millimeter","(^JMn )",false));
	    zplDescription.put("^JS", new ZPLCmdInfo("Sensor Select","(^JSa )",false));
	    zplDescription.put("^JT", new ZPLCmdInfo("Head Test Interval","(^JT####,a,b,c )",false));
	    zplDescription.put("^JU", new ZPLCmdInfo("Configuration Update","(^JUa )",false));
	    zplDescription.put("^JW", new ZPLCmdInfo("Set Ribbon Tension","(^JWt )",false));
	    zplDescription.put("^JZ", new ZPLCmdInfo("Reprint After Error","(^JZa )",false));
	    zplDescription.put("^KC", new ZPLCmdInfo("Set Client Identifier (Option 61)","(^KCa,b,c,d )",false));
	    zplDescription.put("^KD", new ZPLCmdInfo("Select Date and Time Format (for Real Time","(^KDa )",false));
	    zplDescription.put("^KL", new ZPLCmdInfo("Define Language","(^KLa )",false));
	    zplDescription.put("^KN", new ZPLCmdInfo("Define Printer Name","(^KNa,b )",false));
	    zplDescription.put("^KP", new ZPLCmdInfo("Define Password","(^KPa,b )",false));
	    zplDescription.put("^KV", new ZPLCmdInfo("Kiosk Values","(^KVa,b,c,d,e )",false));
	    zplDescription.put("^LF", new ZPLCmdInfo("Print Font Links","(^LF )",false));
	    zplDescription.put("^LH", new ZPLCmdInfo("Label Home","(^LHx,y )",false));
	    zplDescription.put("^LL", new ZPLCmdInfo("Label Length","(^LLy )",false));
	    zplDescription.put("^LR", new ZPLCmdInfo("Label Reverse Print","(^LRa )",false));
	    zplDescription.put("^LS", new ZPLCmdInfo("Label Shift","(^LSa )",false));
	    zplDescription.put("^LT", new ZPLCmdInfo("Label Top","(^LTx )",false));
	    zplDescription.put("^MA", new ZPLCmdInfo("Set Maintenance Alerts","(^MAtype,print,threshold,frequency,units )",false));
	    zplDescription.put("^MC", new ZPLCmdInfo("Map Clear","(^MCa )",false));
	    zplDescription.put("^MD", new ZPLCmdInfo("Media Darkness","(^MDa )",false));
	    zplDescription.put("^MF", new ZPLCmdInfo("Media Feed","(^MFp,h )",false));
	    zplDescription.put("^MI", new ZPLCmdInfo("Set Maintenance Information Message","(^MItype,message )",false));
	    zplDescription.put("^ML", new ZPLCmdInfo("Maximum Label Length","(^MLa )",false));
	    zplDescription.put("^MM", new ZPLCmdInfo("Print Mode","(^MMa,b )",false));
	    zplDescription.put("^MN", new ZPLCmdInfo("Media Tracking","(^MNa,b )",false));
	    zplDescription.put("^MP", new ZPLCmdInfo("Mode Protection","(^MPa )",false));
	    zplDescription.put("^MT", new ZPLCmdInfo("Media Type","(^MTa )",false));
	    zplDescription.put("^MU", new ZPLCmdInfo("Set Units of Measurement","(^MUa,b,c )",false));
	    zplDescription.put("^MW", new ZPLCmdInfo("Modify Head Cold Warning","(^MWa )",false));
	    zplDescription.put("^NB", new ZPLCmdInfo("Search for Wired Print Server during","(^NBa )",false));
	    zplDescription.put("^NC", new ZPLCmdInfo("Select the Primary Network Device","(^NCa )",false));
	    zplDescription.put("^ND", new ZPLCmdInfo("Change Network Settings","(^NDa,b,c,d,e,f,g,h,i,j )",false));
	    zplDescription.put("^NI", new ZPLCmdInfo("Network ID Number","(^NI### )",false));
	    zplDescription.put("^NN", new ZPLCmdInfo("Set SNMP","(^NNa,b,c,d,e,f )",false));
	    zplDescription.put("^NP", new ZPLCmdInfo("Set Primary/Secondary Device","(^NPa )",false));
	    zplDescription.put("^NS", new ZPLCmdInfo("Change Wired Networking Settings","(^NSa,b,c,d,e,f,g,h,i )",false));
	    zplDescription.put("^NT", new ZPLCmdInfo("Set SMTP","(^NTa,b )",false));
	    zplDescription.put("^NW", new ZPLCmdInfo("Set Web Authentication Timeout Value","(^NWa )",false));
	    zplDescription.put("^PA", new ZPLCmdInfo("Advanced Text Properties","(^PAa,b,c,d )",false));
	    zplDescription.put("^PF", new ZPLCmdInfo("Slew Given Number of Dot Rows","(^PF# )",false));
	    zplDescription.put("^PH", new ZPLCmdInfo("Slew to Home Position (Alt. ~PH)","(^PH or ~PH )",false));
	    zplDescription.put("^PM", new ZPLCmdInfo("Printing Mirror Image of Label","(^PMa )",false));
	    zplDescription.put("^PN", new ZPLCmdInfo("Present Now","(^PNa )",false));
	    zplDescription.put("^PO", new ZPLCmdInfo("Print Orientation","(^POa )",false));
	    zplDescription.put("^PP", new ZPLCmdInfo("Programmable Pause (Alt. ~PP)","(^PP or ~PP )",false));
	    zplDescription.put("^PQ", new ZPLCmdInfo("Print Quantity","(^PQq,p,r,o,e )",false));
	    zplDescription.put("^PR", new ZPLCmdInfo("Print Rate","(^PRp,s,b )",false));
	    zplDescription.put("^PW", new ZPLCmdInfo("Print Width","(^PWa )",false));
	    zplDescription.put("^RA", new ZPLCmdInfo("Read AFI or DSFID Byte","(^RA#,f,r,m,b )",false));
	    zplDescription.put("^RB", new ZPLCmdInfo("Define EPC Data Structure","(^RBn,p0,p1,p2, ..., p15 )",false));
	    zplDescription.put("^RE", new ZPLCmdInfo("Enable/Disable E.A.S. Bit","(^REt,r )",false));
	    zplDescription.put("^RF", new ZPLCmdInfo("Read or Write RFID Format","(^RFo,f,b,n,m )",false));
	    zplDescription.put("^RI", new ZPLCmdInfo("Get RFID Tag ID","(^RIa,b,c,d )",false));
	    zplDescription.put("^RL", new ZPLCmdInfo("Lock/Unlock RFID Tag Memory","(^RLB,s,n )",false));
	    zplDescription.put("^RL", new ZPLCmdInfo("Lock/Unlock RFID Tag Memory","(^RLM,k,a,e,u )",false));
	    zplDescription.put("^RM", new ZPLCmdInfo("Enable RFID Motion","(^RMe )",false));
	    zplDescription.put("^RN", new ZPLCmdInfo("Detect Multiple RFID Tags in Encoding Field","(^RNe )",false));
	    zplDescription.put("^RQ", new ZPLCmdInfo("Quick Write EPC Data and Passwords","(^RQf,c,o[data] )",false));
	    zplDescription.put("^RR", new ZPLCmdInfo("Specify RFID Retries for a Block or Enable","(^RRn,a )",false));
	    zplDescription.put("^RS", new ZPLCmdInfo("Set Up RFID Parameters","(^RSt,p,v,n,e,a,c,s )",false));
	    zplDescription.put("^RT", new ZPLCmdInfo("Read RFID Tag","(^RT#,b,n,f,r,m,s )",false));
	    zplDescription.put("^RU", new ZPLCmdInfo("Read Unique RFID Chip Serialization","(^RUa,b )",false));
	    zplDescription.put("^RW", new ZPLCmdInfo("Set RF Power Levels for Read and Write","(^RWr,w,a )",false));
	    zplDescription.put("^RZ", new ZPLCmdInfo("Set RFID Tag Password and Lock Tag","(^RZp,m,l )",false));
	    zplDescription.put("^SC", new ZPLCmdInfo("Set Serial Communications","(^SCa,b,c,d,e,f )",false));
	    zplDescription.put("^SE", new ZPLCmdInfo("Select Encoding Table","(^SEd:o.x )",false));
	    zplDescription.put("^SF", new ZPLCmdInfo("Serialization Field (with a Standard ^FD","(^SFa,b )",false));
	    zplDescription.put("^SI", new ZPLCmdInfo("Set Sensor Intensity","(^SIa,b )",false));
	    zplDescription.put("^SL", new ZPLCmdInfo("Set Mode and Language (for Real-Time Clock)","(^SLa,b )",false));
	    zplDescription.put("^SN", new ZPLCmdInfo("Serialization Data","(^SNv,n,z )",false));
	    zplDescription.put("^SO", new ZPLCmdInfo("Set Offset (for Real-Time Clock)","(^SOa,b,c,d,e,f,g )",false));
	    zplDescription.put("^SP", new ZPLCmdInfo("Start Print","(^SP# )",false));
	    zplDescription.put("^SQ", new ZPLCmdInfo("Halt ZebraNet Alert","(^SQa,b,c )",false));
	    zplDescription.put("^SR", new ZPLCmdInfo("Set Printhead Resistance","(^SR#### )",false));
	    zplDescription.put("^SS", new ZPLCmdInfo("Set Media Sensors","(^SSw,m,r,l,m2,r2,a,b,c )",false));
	    zplDescription.put("^ST", new ZPLCmdInfo("Set Date and Time (for Real-Time Clock)","(^STa,b,c,d,e,f,g )",false));
	    zplDescription.put("^SX", new ZPLCmdInfo("Set ZebraNet Alert","(^SXa,b,c,d,e,f )",false));
	    zplDescription.put("^SZ", new ZPLCmdInfo("Set ZPL Mode","(^SZa )",false));
	    zplDescription.put("^TB", new ZPLCmdInfo("Text Blocks","(^TBa,b,c )",false));
	    zplDescription.put("^TO", new ZPLCmdInfo("Transfer Object","(^TOs:o.x,d:o.x )",false));
	    zplDescription.put("^WA", new ZPLCmdInfo("Set Antenna Parameters","(^WAa,b )",false));
	    zplDescription.put("^WD", new ZPLCmdInfo("Print Directory Label","(^WDd:o.x )",false));
	    zplDescription.put("^WE", new ZPLCmdInfo("Set WEP Mode","(^WEa,b,c,d,e,f,g,h )",false));
	    zplDescription.put("^WF", new ZPLCmdInfo("Encode AFI or DSFID Byte","(^WFr,m,w,f,b )",false));
	    zplDescription.put("^WI", new ZPLCmdInfo("Change Wireless Network Settings","(^WIa,b,c,d,e,f,g,h,i )",false));
	    zplDescription.put("^WL", new ZPLCmdInfo("Set LEAP Parameters","(^WLa,b,c )",false));
	    zplDescription.put("^WP", new ZPLCmdInfo("Set Wireless Password","(^WPa,b )",false));
	    zplDescription.put("^WR", new ZPLCmdInfo("Set Transmit Rate","(^WRa,b,c,d,e )",false));
	    zplDescription.put("^WS", new ZPLCmdInfo("Set Wireless Radio Card Values","(^WSe,o,p,h,i,j,k )",false));
	    zplDescription.put("^WT", new ZPLCmdInfo("Write (Encode) Tag","(^WTb,r,m,w,f,v )",false));
	    zplDescription.put("^WV", new ZPLCmdInfo("Verify RFID Encoding Operation","(^WVe )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX01 )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX02,b,c,d,e,f,g,h )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX03,b,c,d,e,f,g,h )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX04,k )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX05,i,j )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX06,i,j,k )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX07,i,j )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX08,i,j )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX09,n )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX10,k )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX11,i,j )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX12,i,j,k )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX13,i,j )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX14,i,j )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WX15,i,j,l,m )",false));
	    zplDescription.put("^WX", new ZPLCmdInfo("Configure Wireless Securities","(^WXa,... )",false));
	    zplDescription.put("^XA", new ZPLCmdInfo("Start Format","(^XA )",false));
	    zplDescription.put("^XB", new ZPLCmdInfo("Suppress Backfeed","(^XB )",false));
	    zplDescription.put("^XF", new ZPLCmdInfo("Recall Format","(^XFd:o.x )",false));
	    zplDescription.put("^XG", new ZPLCmdInfo("Recall Graphic","(^XGd:o.x,mx,my )",false));
	    zplDescription.put("^XS", new ZPLCmdInfo("Set Dynamic Media Calibration","(^XSlength,threshold )",false));
	    zplDescription.put("^XZ", new ZPLCmdInfo("End Format","(^XZ )",false));
	    zplDescription.put("^ZZ", new ZPLCmdInfo("Printer Sleep","(^ZZt,b )",false));
	    zplDescription.put("~DB", new ZPLCmdInfo("Download Bitmap Font","(~DBd:o.x,a,h,w,base,space,#char,¬©,data )",false));
	    zplDescription.put("~DE", new ZPLCmdInfo("Download Encoding","(~DEd:o.x,s,data )",false));
	    zplDescription.put("~DG", new ZPLCmdInfo("Download Graphics","(~DGd:o.x,t,w,data )",false));
	    zplDescription.put("~DN", new ZPLCmdInfo("Abort Download Graphic","(~DN )",false));
	    zplDescription.put("~DS", new ZPLCmdInfo("Download Intellifont (Scalable Fnt)","(~DSd:o.x,s,data )",false));
	    zplDescription.put("~DT", new ZPLCmdInfo("Download Bounded TrueType Font","(~DTd:o.x,s,data )",false));
	    zplDescription.put("~DU", new ZPLCmdInfo("Download Unbounded TrueType Font","(~DUd:o.x,s,data )",false));
	    zplDescription.put("~DY", new ZPLCmdInfo("Download Objects","(~DYd:f,b,x,t,w,data )",false));
	    zplDescription.put("~EG", new ZPLCmdInfo("Erase All Graphics (Alt. ^EG)","(~EG or ^EG )",false));
	    zplDescription.put("~HB", new ZPLCmdInfo("Return Battery Status","(~HB )",false));
	    zplDescription.put("~HD", new ZPLCmdInfo("Return Head Diagnostic","(~HD )",false));
	    zplDescription.put("~HI", new ZPLCmdInfo("Return Host Identification","(~HI )",false));
	    zplDescription.put("~HM", new ZPLCmdInfo("Return Host RAM Status","(~HM )",false));
	    zplDescription.put("~HQ", new ZPLCmdInfo("Return Host Query","(~HQquery-type )",false));
	    zplDescription.put("~HS", new ZPLCmdInfo("Return Host Status","(~HS )",false));
	    zplDescription.put("~HU", new ZPLCmdInfo("Return ZebraNet Alert Config","(~HU )",false));
	    zplDescription.put("~JA", new ZPLCmdInfo("Cancel All","(~JA )",false));
	    zplDescription.put("~JB", new ZPLCmdInfo("Reset Optional Memory","(~JB )",false));
	    zplDescription.put("~JC", new ZPLCmdInfo("Set Media Sensor Calibration","(~JC )",false));
	    zplDescription.put("~JD", new ZPLCmdInfo("Enable Communications Diagnostics","(~JD )",false));
	    zplDescription.put("~JE", new ZPLCmdInfo("Disable Diagnostics","(~JE )",false));
	    zplDescription.put("~JF", new ZPLCmdInfo("Set Battery Condition","(~JFp )",false));
	    zplDescription.put("~JG", new ZPLCmdInfo("Graphing Sensor Calibration","(~JG )",false));
	    zplDescription.put("~JI", new ZPLCmdInfo("Start Zebra BASIC Interpreter","(~JI )",false));
	    zplDescription.put("~JK", new ZPLCmdInfo("Delayed Cut","(~JK )",false));
	    zplDescription.put("~JL", new ZPLCmdInfo("Set Label Length","(~JL )",false));
	    zplDescription.put("~JN", new ZPLCmdInfo("Head Test Fatal","(~JN )",false));
	    zplDescription.put("~JO", new ZPLCmdInfo("Head Test Non-Fatal","(~JO )",false));
	    zplDescription.put("~JP", new ZPLCmdInfo("Pause and Cancel Format","(~JP )",false));
	    zplDescription.put("~JQ", new ZPLCmdInfo("Terminate Zebra BASIC Interpreter","(~JQ )",false));
	    zplDescription.put("~JR", new ZPLCmdInfo("Power On Reset","(~JR )",false));
	    zplDescription.put("~JS", new ZPLCmdInfo("Change Backfeed Sequence","(~JSb )",false));
	    zplDescription.put("~JX", new ZPLCmdInfo("Cancel Current Partially Input Format","(~JX )",false));
	    zplDescription.put("~KB", new ZPLCmdInfo("Kill Battery (Battery Discharge Mode)","(~KB )",false));
	    zplDescription.put("~NC", new ZPLCmdInfo("Network Connect","(~NC### )",false));
	    zplDescription.put("~NR", new ZPLCmdInfo("Set All Network Printers Transparent","(~NR )",false));
	    zplDescription.put("~NT", new ZPLCmdInfo("Set Currently Connected Printer Transparent","(~NT )",false));
	    zplDescription.put("~PL", new ZPLCmdInfo("Present Length Addition","(~PLa )",false));
	    zplDescription.put("~PR", new ZPLCmdInfo("Applicator Reprint","(~PR )",false));
	    zplDescription.put("~PS", new ZPLCmdInfo("Print Start","(~PS )",false));
	    zplDescription.put("~RO", new ZPLCmdInfo("Reset Advanced Counters","(~ROc )",false));
	    zplDescription.put("~RV", new ZPLCmdInfo("Report RFID Encoding Results","(~RVa )",false));
	    zplDescription.put("~SD", new ZPLCmdInfo("Set Darkness","(~SD## )",false));
	    zplDescription.put("~TA", new ZPLCmdInfo("Tear-off Adjust Position","(~TA### )",false));
	    zplDescription.put("~WC", new ZPLCmdInfo("Print Configuration Label","(~WC )",false));
	    zplDescription.put("~WL", new ZPLCmdInfo("Print Network Configuration Label","(~WL )",false));
	    zplDescription.put("~WQ", new ZPLCmdInfo("Write Query","(~WQquery-type )",false));
	    zplDescription.put("~WR", new ZPLCmdInfo("Reset Wireless Radio Card and Print Server","(~WR )",false));

  }
}
